<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-27T08:12:16.835Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot集成通用mapper</title>
    <link href="http://yoursite.com/2019/08/26/SpringBoot%E9%9B%86%E6%88%90%E9%80%9A%E7%94%A8mapper/"/>
    <id>http://yoursite.com/2019/08/26/SpringBoot集成通用mapper/</id>
    <published>2019-08-26T08:35:22.000Z</published>
    <updated>2019-08-27T08:12:16.835Z</updated>
    
    <content type="html"><![CDATA[<p>原先使用的mybatis-generator-core会生成大量example的文件影响后期维护以及数据库的迁移，<br>所以考虑对用通用mapper项目做一次啊重构减少项目代码的耦合性，以下是具体流程以及重构过<br>程各中遇到的坑。<br>[官方文档]（<a href="https://mapperhelper.github.io/docs/）" target="_blank" rel="noopener">https://mapperhelper.github.io/docs/）</a></p><a id="more"></a><p>#主要环境<br>编译器使用IDEA，数据库使用Mysql8.0.14，构建工具使用gradle</p><h1 id="一、添加依赖"><a href="#一、添加依赖" class="headerlink" title="一、添加依赖"></a>一、添加依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    ext &#123;</span><br><span class="line">        springBootVersion = &apos;2.1.2.RELEASE&apos;</span><br><span class="line">    &#125;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath(&quot;org.springframework.boot:spring-boot-gradle-plugin:$&#123;springBootVersion&#125;&quot;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">apply plugin: &apos;java&apos;</span><br><span class="line">apply plugin: &apos;org.springframework.boot&apos;</span><br><span class="line">apply plugin: &apos;io.spring.dependency-management&apos;</span><br><span class="line"></span><br><span class="line">group = &apos;mhh&apos;</span><br><span class="line">version = &apos;1.0&apos;</span><br><span class="line">sourceCompatibility = &apos;1.8&apos;</span><br><span class="line"></span><br><span class="line">repositories &#123;</span><br><span class="line">    mavenLocal()</span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ext &#123;</span><br><span class="line">    set(&apos;springCloudVersion&apos;, &apos;Greenwich.RC2&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    runtimeOnly &apos;mysql:mysql-connector-java&apos;</span><br><span class="line">    testImplementation &apos;org.springframework.boot:spring-boot-starter-test&apos;</span><br><span class="line">    compile group: &apos;org.mybatis.generator&apos;, name: &apos;mybatis-generator-core&apos;, version: &apos;1.3.5&apos;</span><br><span class="line">    compile group: &apos;tk.mybatis&apos;, name: &apos;mapper&apos;, version: &apos;4.0.3&apos;</span><br><span class="line">    compile group: &apos;com.github.pagehelper&apos;, name: &apos;pagehelper-spring-boot-starter&apos;, version: &apos;1.2.5&apos;</span><br><span class="line">    compile group: &apos;com.alibaba&apos;, name: &apos;druid-spring-boot-starter&apos;, version: &apos;1.1.10&apos;</span><br><span class="line">    compile group: &apos;org.springframework&apos;, name: &apos;spring-jdbc&apos;, version: &apos;5.1.4.RELEASE&apos;</span><br><span class="line">&#125;</span><br><span class="line">dependencyManagement &#123;</span><br><span class="line">    imports &#123;</span><br><span class="line">        mavenBom &quot;org.springframework.cloud:spring-cloud-dependencies:$&#123;springCloudVersion&#125;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">bootJar &#123;</span><br><span class="line">    destinationDir = rootProject.file(&apos;build/libs&apos;)</span><br><span class="line">    archiveName = &apos;app.jar&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、创建BaseMapper"><a href="#二、创建BaseMapper" class="headerlink" title="二、创建BaseMapper"></a>二、创建BaseMapper</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">package com.sjiay.demo.config;</span><br><span class="line"></span><br><span class="line">import tk.mybatis.mapper.common.Mapper;</span><br><span class="line">import tk.mybatis.mapper.common.MySqlMapper;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * BaseMapper继承通用mapper</span><br><span class="line"> * @param &lt;T&gt;</span><br><span class="line"> */</span><br><span class="line">public interface BaseMapper&lt;T&gt; extends Mapper&lt;T&gt;, MySqlMapper&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：上面创建的接口不能被扫描到，否则会报错，Mapper3提供的所有方法可查看[官方文档]（<a href="https://mapperhelper.github.io/docs/）" target="_blank" rel="noopener">https://mapperhelper.github.io/docs/）</a></p><h1 id="三、配置application-yml"><a href="#三、配置application-yml" class="headerlink" title="三、配置application.yml"></a>三、配置application.yml</h1> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 30020</span><br><span class="line">spring:</span><br><span class="line">  jackson:</span><br><span class="line">    date-format: yyyy-MM-dd HH:mm:ss</span><br><span class="line">    time-zone: Asia/Shanghai</span><br><span class="line">  application:</span><br><span class="line">    name: demo</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://xxx.xxx.xx.xx:3306/db_name?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=UTC</span><br><span class="line">    username: db_username</span><br><span class="line">    password: db_password</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mybatis:</span><br><span class="line">  mapper-locations: classpath*:/mappers/**/*Mapper.xml</span><br><span class="line">  configuration:</span><br><span class="line">    map-underscore-to-camel-case: true</span><br><span class="line">    use-generated-keys: true</span><br><span class="line">    default-fetch-size: 100</span><br><span class="line">    default-statement-timeout: 30</span><br><span class="line"></span><br><span class="line">mapper:</span><br><span class="line">  #mappers 多个接口时逗号隔开</span><br><span class="line">  mappers: com.sjiay.demo.config.BaseMapper</span><br><span class="line">  not-empty: false</span><br><span class="line">  identity: MYSQL</span><br></pre></td></tr></table></figure><h1 id="四、新建generatorConfig-xml以及自动生成工具类"><a href="#四、新建generatorConfig-xml以及自动生成工具类" class="headerlink" title="四、新建generatorConfig.xml以及自动生成工具类"></a>四、新建generatorConfig.xml以及自动生成工具类</h1><p>在resource目录下增加generatorConfig.xml文件<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- context:运行环境，包含大部分的配置信息</span><br><span class="line">        id：这个运行环境的唯一标示</span><br><span class="line">        targetRuntime：配置生成代码风格。默认就是MyBatis3，还可以设置MyBatis3Simple，这里使用MyBatis3Simple不会生成example等复杂条件</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;context id=&quot;testContext&quot; targetRuntime=&quot;MyBatis3Simple&quot; defaultModelType=&quot;flat&quot;&gt;</span><br><span class="line">        &lt;property name=&quot;javaFileEncoding&quot; value=&quot;UTF-8&quot; /&gt;</span><br><span class="line">&lt;!--注意配置useMapperCommentGenerator，避免生成较多无用注解，此处也支持自定义注解以及版本差异在此处的配置不一样，建议使用4.0+--&gt;</span><br><span class="line">        &lt;property name=&quot;useMapperCommentGenerator&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;plugin type=&quot;tk.mybatis.mapper.generator.MapperPlugin&quot;&gt;</span><br><span class="line">&lt;!--配置上一步设置的BaseMapper，使之后生成的具体业务mapper自动继承自BaseMapper--&gt;</span><br><span class="line">            &lt;property name=&quot;mappers&quot; value=&quot;com.com.sjiay.config.BaseMapper&quot; /&gt;</span><br><span class="line">            &lt;!--caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true--&gt;</span><br><span class="line">            &lt;property name=&quot;caseSensitive&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;forceAnnotation&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;beginningDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;endingDelimiter&quot; value=&quot;`&quot;/&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">            &lt;!-- 是否去除日期注释 --&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--数据库连接的信息：驱动类、连接地址、表名 、用户名、密码 ,此处也可通过读取配置文件的方式来设置--&gt;</span><br><span class="line">        &lt;jdbcConnection</span><br><span class="line">                driverClass=&quot;com.mysql.cj.jdbc.Driver&quot;</span><br><span class="line">                connectionURL=&quot;jdbc:mysql://xxx.xxx.xx.xx:3306/db_name&quot;</span><br><span class="line">                userId=&quot;db_username&quot;</span><br><span class="line">                password=&quot;db_password&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 默认false,会根据数据精度来判断转换为Java什么类型。推荐</span><br><span class="line">            为 true时会强制把数据库Decimal、Numeric数据类型解析为java.math.BigDecimal</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- javaModelGenerator:有关实体类的配置</span><br><span class="line">                targetPackage:生成实体类所在包</span><br><span class="line">                targetProject:生成POJO类的位置</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.sjiay.demo.entity&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;!-- 是否根据表schema生成子包 --&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">            &lt;!-- 是否清理 从数据库返回的值前后的空格 --&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line">        &lt;!-- sqlMapGenerator：有关映射文件的配置，属性跟上面的javaModelGenerator类似</span><br><span class="line">                targetPackage：指定mapper.xml所在包名</span><br><span class="line">                targetProject：指定在项目中存放的位置，因为是maven工程，所以放在resource下。</span><br><span class="line">                最终Mapper.xml文件的目录就是 src/main/resources下的mappers目录下</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;mappers&quot; targetProject=&quot;src/main/resources&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- javaClientGenerator：有关Mapper接口的配置，属性跟上面的javaModelGenerator类似</span><br><span class="line">                type=&quot;XMLMAPPER&quot;：设置以XML格式生成映射而非注解</span><br><span class="line">         --&gt;</span><br><span class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;com.sjiay.demo..mapper&quot;</span><br><span class="line">                             targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;false&quot; /&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 指定数据库表</span><br><span class="line">            catalog：数据库里的catalog</span><br><span class="line">            tableName：表的名称</span><br><span class="line">            domainObjectName：指定表对应生成实体类的名称</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;table tableName=&quot;demo_user&quot; domainObjectName=&quot;user&quot;&gt;</span><br><span class="line">            &lt;!-- 设置自增ID的回显功能 --&gt;</span><br><span class="line">            &lt;!--&lt;generatedKey column=&quot;id&quot; sqlStatement=&quot;Mysql&quot;/&gt;--&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure></p><p> 新建自动生成工具类GeneratorTest.java<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"> package com.sjiay.demo;</span><br><span class="line"></span><br><span class="line">import org.apache.ibatis.io.Resources;</span><br><span class="line">import org.mybatis.generator.api.MyBatisGenerator;</span><br><span class="line">import org.mybatis.generator.config.Configuration;</span><br><span class="line">import org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class="line">import org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class="line"></span><br><span class="line">import java.io.InputStream;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author o_0sky</span><br><span class="line"> * @date 2019/6/20 18:01</span><br><span class="line"> */</span><br><span class="line">public class GeneratorTest &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        String today = &quot;2019-08-14&quot;;</span><br><span class="line"></span><br><span class="line">        SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);</span><br><span class="line">        Date now = sdf.parse(today);</span><br><span class="line">        Date d = new Date();</span><br><span class="line"></span><br><span class="line">        if (d.getTime() &gt; now.getTime() + 1000 * 60 * 60 * 24) &#123;</span><br><span class="line">            System.err.println(&quot;——————未成成功运行——————&quot;);</span><br><span class="line">            System.err.println(&quot;——————未成成功运行——————&quot;);</span><br><span class="line">            System.err.println(&quot;本程序具有破坏作用，应该只运行一次，如果必须要再运行，需要修改today变量为今天，如:&quot; + sdf.format(new Date()));</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (false)</span><br><span class="line">            return;</span><br><span class="line">        List&lt;String&gt; warnings = new ArrayList&lt;String&gt;();</span><br><span class="line">        // 是否覆盖以前生成的重复代码</span><br><span class="line">        boolean overwrite = true;</span><br><span class="line">        // 配置文件的资源路径，会去classpath下找。maven项目中，就是resource下</span><br><span class="line">        InputStream in = Resources.getResourceAsStream(&quot;generatorConfig.xml&quot;);</span><br><span class="line">        // 配置解析器</span><br><span class="line">        ConfigurationParser cp = new ConfigurationParser(warnings);</span><br><span class="line">        // 加载配置文件，并解析</span><br><span class="line">        Configuration config = cp.parseConfiguration(in);</span><br><span class="line">        DefaultShellCallback callback = new DefaultShellCallback(overwrite);</span><br><span class="line">        // 获取MBG对象</span><br><span class="line">        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);</span><br><span class="line">        // 生成代码</span><br><span class="line">        myBatisGenerator.generate(null);</span><br><span class="line">        for (String warning : warnings) &#123;</span><br><span class="line">            System.out.println(warning);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p> 运行GeneratorTest类，会在entity包下生成实体，mapper包下生成mapper接口，以及resources下mappers目录下对应的mapper.xml文件</p><h1 id="五、配置SpringBoot启动类"><a href="#五、配置SpringBoot启动类" class="headerlink" title="五、配置SpringBoot启动类"></a>五、配置SpringBoot启动类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package com.mhh.menzhengljk;</span><br><span class="line"></span><br><span class="line">import org.springframework.boot.SpringApplication;</span><br><span class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line">import tk.mybatis.spring.annotation.MapperScan;</span><br><span class="line"></span><br><span class="line">@MapperScan(value = &quot;com.sjiay.demo.mapper&quot;)</span><br><span class="line">@SpringBootApplication</span><br><span class="line">public class DemoApplication &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 注意：此处要扫描对应生成的mapper接口，MapperScan是tk.mybatis.spring.annotation.MapperScan,而不是org下的MapperScan。</p><h1 id="六、公共实体封装"><a href="#六、公共实体封装" class="headerlink" title="六、公共实体封装"></a>六、公共实体封装</h1><p>在实际项目中会会传一些公共参数，如时间区间，分页参数每页显示的行数和显示第几行等，<br>此处使用BaseEntity进行封装，然后让自动生成的实体类继承这个公共实体，算是对原先实<br>体的一个扩展。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">package com.sjiay.demo.entity;</span><br><span class="line"></span><br><span class="line">import javax.persistence.Transient;</span><br><span class="line">import javax.validation.constraints.NotEmpty;</span><br><span class="line"></span><br><span class="line">public class BaseEntity &#123;</span><br><span class="line"></span><br><span class="line">    @NotEmpty</span><br><span class="line">    @Transient</span><br><span class="line">    private String riqi1;</span><br><span class="line"></span><br><span class="line">    @NotEmpty</span><br><span class="line">    @Transient</span><br><span class="line">    private String riqi2;</span><br><span class="line"></span><br><span class="line">    @Transient</span><br><span class="line">    private Integer rows;</span><br><span class="line"></span><br><span class="line">    @Transient</span><br><span class="line">    private Integer page;</span><br><span class="line"></span><br><span class="line">    public String getRiqi1() &#123;</span><br><span class="line">        return riqi1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setRiqi1(String riqi1) &#123;</span><br><span class="line">        this.riqi1 = riqi1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getRiqi2() &#123;</span><br><span class="line">        return riqi2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setRiqi2(String riqi2) &#123;</span><br><span class="line">        this.riqi2 = riqi2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getRows() &#123;</span><br><span class="line">        return rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setRows(Integer rows) &#123;</span><br><span class="line">        this.rows = rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public Integer getPage() &#123;</span><br><span class="line">        return page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPage(Integer page) &#123;</span><br><span class="line">        this.page = page;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对应生成的实体类让其继承上面的公共实体类，具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">package com.mhh.menzhengljk.entity;</span><br><span class="line"></span><br><span class="line">import javax.persistence.Table;</span><br><span class="line"></span><br><span class="line">@Table(name = &quot;user&quot;)</span><br><span class="line">public class user extends BaseEntity&#123;</span><br><span class="line"></span><br><span class="line">    private Integer userid;</span><br><span class="line"></span><br><span class="line">    private String username;</span><br><span class="line"></span><br><span class="line">    private String chushengrq;</span><br><span class="line"></span><br><span class="line"> public Integer getUserid() &#123;</span><br><span class="line">        return userid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUserid(Integer userid) &#123;</span><br><span class="line">        this.userid = userid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getUsername() &#123;</span><br><span class="line">        return username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUsername(String username) &#123;</span><br><span class="line">        this.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getChushengrq() &#123;</span><br><span class="line">        return chushengrq;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setChushengrq(String chushengrq) &#123;</span><br><span class="line">        this.chushengrq = chushengrq;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处对出生日期做一个区间查询，我这边业务要求上日期使用了String，一般是可以直接用date去存储。</p><h1 id="七、Service封装"><a href="#七、Service封装" class="headerlink" title="七、Service封装"></a>七、Service封装</h1><p>你当然可以在controller中注入mapper进行开发，而在实际开发过程中一般都会使用Service做一些逻辑判断，<br>以及事务的控制，这里主要简单对加了通用mapper之后怎么封装做了演示，主要是让所有Service继承一个<br>BaseService，这样就可以保证所有Service都有通用mapper的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">package com.sjiay.demo.service.base;</span><br><span class="line"></span><br><span class="line">import com.sjiay.demo.entity.BaseEntity;</span><br><span class="line">import org.apache.ibatis.annotations.Param;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">public interface BaseService &lt;T extends BaseEntity&gt;&#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 只获取一条数据，当查询的结果多于一条数据时抛出异常。如果只想获取检索结果的第一条数据请一部 @see selectFirst</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    T selectOne(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据条件查询返回数据列表</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    List&lt;T&gt; select(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据主键查询</span><br><span class="line">     *</span><br><span class="line">     * @param pk 主键</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    T selectByPrimaryKey(Object pk);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据条件查询返回数据条数</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int selectCount(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 查询返回所有数据列表</span><br><span class="line">     *</span><br><span class="line">     * @param</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    List&lt;T&gt; selectAll();</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据条件查询返回数据列表</span><br><span class="line">     *</span><br><span class="line">     * @param example</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    List&lt;T&gt; selectByExample(Object example);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据Example条件进行查询总数</span><br><span class="line">     *</span><br><span class="line">     * @param example</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int selectCountByExample(Object example);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据Example条件更新实体record包含的全部属性，null值会被更新</span><br><span class="line">     *</span><br><span class="line">     * @param record example</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int updateByExample(@Param(&quot;record&quot;) T record, @Param(&quot;example&quot;) Object example);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据Example条件更新实体record包含的不是null的属性值</span><br><span class="line">     *</span><br><span class="line">     * @param record example</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int updateByExampleSelective(@Param(&quot;record&quot;) T record, @Param(&quot;example&quot;) Object example);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据Example条件删除数据</span><br><span class="line">     *</span><br><span class="line">     * @param example</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int deleteByExample(Object example);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 保存一个实体，null的属性也会保存，不会使用数据库默认值</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int insert(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 保存一个实体，null的属性不会保存，会使用数据库默认值</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int insertSelective(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 插入列表，空属性不会插入</span><br><span class="line">     *</span><br><span class="line">     * @param recordList</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int insertListSelective(List&lt;T&gt; recordList);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据主键更新实体全部字段，null值会被更新</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int updateByPrimaryKey(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据主键更新属性不为null的值</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int updateByPrimaryKeySelective(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据实体属性作为条件进行删除，查询条件使用等号</span><br><span class="line">     *</span><br><span class="line">     * @param record</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int delete(T record);</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 根据主键字段进行删除，方法参数必须包含完整的主键属性</span><br><span class="line">     *</span><br><span class="line">     * @param key</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    int deleteByPrimaryKey(Object key);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">package com.sjiay.demo.service.base.impl;</span><br><span class="line"></span><br><span class="line">import com.sjiay.demo.config.BaseMapper;</span><br><span class="line">import com.sjiay.demo.entity.BaseEntity;</span><br><span class="line">import com.sjiay.demo.service.base.BaseService;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line">@Service</span><br><span class="line">public class BaseServiceImpl&lt;T extends BaseEntity&gt;  implements BaseService&lt;T&gt; &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private BaseMapper&lt;T&gt; baseMapper;</span><br><span class="line">    @Override</span><br><span class="line">    public T selectOne(T record) &#123;</span><br><span class="line">        return  baseMapper.selectOne(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;T&gt; select(T record) &#123;</span><br><span class="line">        return baseMapper.select(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public T selectByPrimaryKey(Object pk) &#123;</span><br><span class="line">        if (pk == null) &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        return baseMapper.selectByPrimaryKey(pk);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int selectCount(T record) &#123;</span><br><span class="line">        return baseMapper.selectCount(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;T&gt; selectAll() &#123;</span><br><span class="line">        return baseMapper.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;T&gt; selectByExample(Object example) &#123;</span><br><span class="line">        return  baseMapper.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int selectCountByExample(Object example) &#123;</span><br><span class="line">        return  baseMapper.selectCountByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int updateByExample(T record, Object example) &#123;</span><br><span class="line">        return  baseMapper.updateByExample(record,example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int updateByExampleSelective(T record, Object example) &#123;</span><br><span class="line">        return  baseMapper.updateByExampleSelective(record,example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int deleteByExample(Object example) &#123;</span><br><span class="line">        return  baseMapper.deleteByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int insert(T record) &#123;</span><br><span class="line">        return  baseMapper.insert(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int insertSelective(T record) &#123;</span><br><span class="line">        return  baseMapper.insertSelective(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int insertListSelective(List&lt;T&gt; recordList) &#123;</span><br><span class="line">        for (T record : recordList) &#123;</span><br><span class="line">            baseMapper.insertSelective(record);</span><br><span class="line">        &#125;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int updateByPrimaryKey(T record) &#123;</span><br><span class="line">        return  baseMapper.updateByPrimaryKey(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int updateByPrimaryKeySelective(T record) &#123;</span><br><span class="line">        return  baseMapper.updateByPrimaryKeySelective(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int delete(T record) &#123;</span><br><span class="line">        return  baseMapper.delete(record);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int deleteByPrimaryKey(Object key) &#123;</span><br><span class="line">        return baseMapper.deleteByPrimaryKey(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将通用mapper中一些常用的方法进行实现，具体业务类的Service可实现如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package com.sjiay.demo.service.wszy.impl;</span><br><span class="line"></span><br><span class="line">import com.sjiay.demo.entity.user;</span><br><span class="line">import com.sjiay.demo.service.base.impl.BaseServiceImpl;</span><br><span class="line">import com.sjiay.demo.service.wszy.UserService;</span><br><span class="line">import org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class UserServiceImpl extends BaseServiceImpl&lt;user&gt; implements UserService &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在只有通用方法时就不需要加任何方法，是不是显得特别简约方便。</p><h1 id="八、测试一下"><a href="#八、测试一下" class="headerlink" title="八、测试一下"></a>八、测试一下</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">package com.sjiay.demo.controller;</span><br><span class="line"></span><br><span class="line">import com.dongfang.mhh.mhhbase.ResMsg;</span><br><span class="line">import com.dongfang.mhh.mhhbase.ResMsgpage;</span><br><span class="line">import com.github.pagehelper.PageHelper;</span><br><span class="line">import com.github.pagehelper.PageInfo;</span><br><span class="line">import com.sjiay.demo.service.wszy.UserService;</span><br><span class="line">import com.sjiay.demo.entity.XzyyFuwujg;</span><br><span class="line">import org.apache.commons.lang.StringUtils;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line">import tk.mybatis.mapper.entity.Example;</span><br><span class="line"></span><br><span class="line">import java.util.List;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/demo&quot;)</span><br><span class="line">public class UserController &#123;</span><br><span class="line">    @Autowired</span><br><span class="line">    private UserService userService;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 获取用户列表</span><br><span class="line">     */</span><br><span class="line">    @PostMapping(&quot;/getUserList&quot;)</span><br><span class="line">    public ResMsgpage getJgxxList(@RequestBody User user) &#123;</span><br><span class="line">        Example example = new Example(User.class);</span><br><span class="line">        Example.Criteria criteria = example.createCriteria();</span><br><span class="line">        criteria.andBetween(&quot;chushengrq&quot;,user.getRiqi1(),user.getRiqi2());</span><br><span class="line">        example.and(criteria);</span><br><span class="line">        PageHelper.startPage(user.getPage(), user.getRows(), true);</span><br><span class="line">        List&lt;User&gt; userList = userService.selectByExample(example);</span><br><span class="line">        PageInfo&lt;User&gt; pageInfo=new PageInfo&lt;User&gt;(userList);</span><br><span class="line">        Long page = Long.valueOf(user.getPage());</span><br><span class="line">        Long total = Long.valueOf(pageInfo.getPages());</span><br><span class="line">        return new ResMsgpage(userList,page,pageInfo.getTotal(),total);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>实际项目中上面的返回结果集都做过封装，简单使用可直接通过List来返回，<br>上述过程都是亲测成功，如有需要用到通用mapper的欢迎参考。上述内容纯<br>属个人总结，如有错误欢迎拍砖！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原先使用的mybatis-generator-core会生成大量example的文件影响后期维护以及数据库的迁移，&lt;br&gt;所以考虑对用通用mapper项目做一次啊重构减少项目代码的耦合性，以下是具体流程以及重构过&lt;br&gt;程各中遇到的坑。&lt;br&gt;[官方文档]（&lt;a href=&quot;https://mapperhelper.github.io/docs/）&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mapperhelper.github.io/docs/）&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="后端" scheme="http://yoursite.com/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>第一个博客</title>
    <link href="http://yoursite.com/2019/08/19/me-first-blog/"/>
    <id>http://yoursite.com/2019/08/19/me-first-blog/</id>
    <published>2019-08-19T10:25:11.000Z</published>
    <updated>2019-08-20T09:13:33.536Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用Markdown编辑器写博客-一级标题-对应"><a href="#欢迎使用Markdown编辑器写博客-一级标题-对应" class="headerlink" title="欢迎使用Markdown编辑器写博客    //一级标题 对应  "></a>欢迎使用Markdown编辑器写博客    //一级标题 对应 <h1> </h1></h1><h2 id="标题输入-二级标题-对应"><a href="#标题输入-二级标题-对应" class="headerlink" title="标题输入                     //二级标题 对应  "></a>标题输入                     //二级标题 对应 <h2> </h2></h2><h3 id="三级标题-三级标题-对应"><a href="#三级标题-三级标题-对应" class="headerlink" title="三级标题                    //三级标题 对应  "></a>三级标题                    //三级标题 对应 <h3> </h3></h3><h4 id="四级标题-四级标题-对应"><a href="#四级标题-四级标题-对应" class="headerlink" title="四级标题                   //四级标题 对应  "></a>四级标题                   //四级标题 对应 <h4> </h4></h4><h5 id="五级标题-五级标题-对应"><a href="#五级标题-五级标题-对应" class="headerlink" title="五级标题                  //五级标题 对应  "></a>五级标题                  //五级标题 对应 <h5> </h5></h5><h6 id="六级标题-六级标题-对应"><a href="#六级标题-六级标题-对应" class="headerlink" title="六级标题                 //六级标题 对应  "></a>六级标题                 //六级标题 对应 <h6> </h6></h6><p>####### 七级标题                //抱歉，木有了（但是他会影响生成的目录，目录行多出一行空行）</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Hello World!</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>列1</th><th>列2</th><th>列3</th></tr></thead><tbody><tr><td>第1行</td><td>12</td><td>13</td></tr><tr><td>第2行</td><td>22</td><td>23</td></tr><tr><td>第3行</td><td>32</td><td>33</td></tr></tbody></table><p><em>斜体</em>， <strong>粗体</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;欢迎使用Markdown编辑器写博客-一级标题-对应&quot;&gt;&lt;a href=&quot;#欢迎使用Markdown编辑器写博客-一级标题-对应&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用Markdown编辑器写博客    //一级标题 对应  &quot;&gt;&lt;/a&gt;欢迎使用Markdown编辑器写博客    //一级标题 对应 &lt;h1&gt; &lt;/h1&gt;&lt;/h1&gt;&lt;h2 id=&quot;标题输入-二级标题-对应&quot;&gt;&lt;a href=&quot;#标题输入-二级标题-对应&quot; class=&quot;headerlink&quot; title=&quot;标题输入                     //二级标题 对应  &quot;&gt;&lt;/a&gt;标题输入                     //二级标题 对应 &lt;h2&gt; &lt;/h2&gt;&lt;/h2&gt;&lt;h3 id=&quot;三级标题-三级标题-对应&quot;&gt;&lt;a href=&quot;#三级标题-三级标题-对应&quot; class=&quot;headerlink&quot; title=&quot;三级标题                    //三级标题 对应  &quot;&gt;&lt;/a&gt;三级标题                    //三级标题 对应 &lt;h3&gt; &lt;/h3&gt;&lt;/h3&gt;&lt;h4 id=&quot;四级标题-四级标题-对应&quot;&gt;&lt;a href=&quot;#四级标题-四级标题-对应&quot; class=&quot;headerlink&quot; title=&quot;四级标题                   //四级标题 对应  &quot;&gt;&lt;/a&gt;四级标题                   //四级标题 对应 &lt;h4&gt; &lt;/h4&gt;&lt;/h4&gt;&lt;h5 id=&quot;五级标题-五级标题-对应&quot;&gt;&lt;a href=&quot;#五级标题-五级标题-对应&quot; class=&quot;headerlink&quot; title=&quot;五级标题                  //五级标题 对应  &quot;&gt;&lt;/a&gt;五级标题                  //五级标题 对应 &lt;h5&gt; &lt;/h5&gt;&lt;/h5&gt;&lt;h6 id=&quot;六级标题-六级标题-对应&quot;&gt;&lt;a href=&quot;#六级标题-六级标题-对应&quot; class=&quot;headerlink&quot; title=&quot;六级标题                 //六级标题 对应  &quot;&gt;&lt;/a&gt;六级标题                 //六级标题 对应 &lt;h6&gt; &lt;/h6&gt;&lt;/h6&gt;&lt;p&gt;####### 七级标题                //抱歉，木有了（但是他会影响生成的目录，目录行多出一行空行）&lt;/p&gt;
    
    </summary>
    
      <category term="个人" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/08/19/hello-world/"/>
    <id>http://yoursite.com/2019/08/19/hello-world/</id>
    <published>2019-08-19T08:37:14.431Z</published>
    <updated>2019-08-20T05:59:59.775Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
